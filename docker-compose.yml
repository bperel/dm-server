version: '2.1'
services:
  web:
    container_name: dm-server
    image: "nginx:1.15"
    ports:
     - "8001:80"
    depends_on:
     - db_coa
     - db_cover_id
     - db_dm_copy
     - db_dm_stats
     - db_edgecreator
     - php
    volumes:
     - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
     - front-network

  php:
    container_name: dm-server-php
    build:
      context: .
      dockerfile: Dockerfile-dev
    volumes:
     - ./ssmtp.conf:/etc/ssmtp/ssmtp.conf
    networks:
     - front-network
     - db-network

  coa-updater:
    container_name: coa-updater
    image: "bperel/coa-updater"
    depends_on:
     - db_coa
    environment:
      - MYSQL_HOST=db_coa
      - MYSQL_DATABASE=coa
    volumes:
      - ./_inducks:/home/inducks:z
    command: echo "Not provisionning the COA db on dev"
    networks:
     - db-network
  db_coa:
    container_name: mariadb-server-for-coa-box
    image: "mariadb:10.2"
    volumes:
     - $MYSQL_INIT_SCRIPT_COA:/docker-entrypoint-initdb.d/$MYSQL_INIT_SCRIPT_TARGET_FILE_NAME:ro
    ports:
     - "44000:3306"
    environment:
      MYSQL_DATABASE: coa
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
    networks:
     - db-network
     - cover-id-network

  cover-updater:
    container_name: cover-updater
    image: "bperel/duck-cover-id-updater"
    depends_on:
     - db_cover_id
     - db_coa
    environment:
      - MYSQL_COVER_INFO_HOST=mariadb-server-for-cover-info-box
      - MYSQL_COVER_INFO_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_COVER_INFO_DATABASE=cover_info
      - MYSQL_COA_HOST=mariadb-server-for-coa-box
      - MYSQL_COA_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_COA_DATABASE=coa
      - PASTEC_HOST=pastec-ubuntu-1704-timestamps
      - PASTEC_PORT=4212
      - PASTEC_CONTAINER_HOME=/pastec/build
    networks:
     - db-network
     - cover-id-network
  db_cover_id:
    container_name: mariadb-server-for-cover-info-box
    image: "mariadb:10.2"
    volumes:
     - $MYSQL_INIT_SCRIPT_COVER_INFO:/docker-entrypoint-initdb.d/$MYSQL_INIT_SCRIPT_TARGET_FILE_NAME:ro
    ports:
     - "44009:3306"
    environment:
      MYSQL_DATABASE: cover_info
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
    networks:
     - db-network
  pastec:
    container_name: pastec-ubuntu-1704-timestamps
    image: "bperel/pastec-ubuntu-1704-timestamps"
    networks:
     - cover-id-network

  db_dm_copy:
    container_name: mariadb-server-for-dm
    image: "mariadb:10.2"
    volumes:
     - $MYSQL_INIT_SCRIPT_DM:/docker-entrypoint-initdb.d/$MYSQL_INIT_SCRIPT_TARGET_FILE_NAME:ro
    ports:
     - "44002:3306"
    environment:
      MYSQL_DATABASE: dm
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
    networks:
     - db-network
  db_edgecreator:
    container_name: mariadb-server-for-edgecreator
    image: "mariadb:10.2"
    volumes:
     - $MYSQL_INIT_SCRIPT_EDGECREATOR:/docker-entrypoint-initdb.d/$MYSQL_INIT_SCRIPT_TARGET_FILE_NAME:ro
    ports:
     - "44003:3306"
    environment:
      MYSQL_DATABASE: edgecreator
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
    networks:
     - db-network
  db_dm_stats:
    container_name: mariadb-server-for-dm-stats
    image: "mariadb:10.2"
    volumes:
     - $MYSQL_INIT_SCRIPT_DM_STATS:/docker-entrypoint-initdb.d/$MYSQL_INIT_SCRIPT_TARGET_FILE_NAME:ro
    ports:
     - "44010:3306"
    environment:
      MYSQL_DATABASE: dm_stats
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
    networks:
     - db-network
  swagger:
    container_name: swagger
    image: "swaggerapi/swagger-ui"
    ports:
     - "8081:8080"
    environment:
      API_URL: http://${DMSERVER_HOST}:${DMSERVER_PORT}/dm-server/status/swagger.json
      SWAGGER_JSON: http://dm-server/dm-server/status/swagger.json

networks:
  front-network:
    driver: bridge
  db-network:
    driver: bridge
  cover-id-network:
    driver: bridge
