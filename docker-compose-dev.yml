version: '2.4'
services:
  web:
    container_name: dm-server-web
    image: "nginx:1.15"
    ports:
     - "10001:80"
    depends_on:
     - db_coa
     - db_cover_id
     - db_dm_copy
     - db_dm_stats
     - db_edgecreator
     - php
    volumes:
     - .:/var/www/html:z
     - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
     - front-network

  php:
    container_name: dm-server-php
    build:
      context: .
      dockerfile: Dockerfile-dev
    volumes:
     - .:/var/www/html:z
     - ./php.xdebug.ini:/usr/local/etc/php/php.ini:z
    environment:
      DM_SERVER_ADDRESS: "$DM_SERVER_HOST:$DM_SERVER_PORT"
    networks:
     - front-network
     - db-network
     - cover-id-network
    command: sh -c 'composer install --no-plugins --no-scripts && php app/config/generate-config.php docker-compose-dev.yml .env && php scripts/generate-swagger.php && php-fpm'

  php-no-debug:
    container_name: dm-server-php-no-debug
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
     - .:/var/www/html:z
    environment:
      DM_SERVER_ADDRESS: "$DM_SERVER_HOST:$DM_SERVER_PORT"
    networks:
     - front-network
     - db-network
     - cover-id-network
    command: sh -c 'composer install --no-plugins --no-scripts && php app/config/generate-config.php docker-compose-dev.yml .env && php scripts/generate-swagger.php && php-fpm'

  db_coa:
    container_name: db_coa
    image: "mariadb:10.2"
    volumes:
     - $MYSQL_INIT_SCRIPT_COA:/docker-entrypoint-initdb.d/$MYSQL_INIT_SCRIPT_TARGET_FILE_NAME:ro
    ports:
     - "64000:3306"
    environment:
      MYSQL_DATABASE: coa
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
    command: ['mysqld', '--character-set-server=utf8', '--collation-server=utf8_unicode_ci']
    networks:
     - db-network
     - cover-id-network

  db_cover_id:
    container_name: db_cover_id
    image: "mariadb:10.2"
    volumes:
     - $MYSQL_INIT_SCRIPT_COVER_INFO:/docker-entrypoint-initdb.d/$MYSQL_INIT_SCRIPT_TARGET_FILE_NAME:ro
    ports:
     - "64001:3306"
    environment:
      MYSQL_DATABASE: cover_info
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
    networks:
     - db-network
  pastec:
    container_name: pastec
    image: "bperel/pastec-ubuntu-1704-timestamps"
    networks:
     - cover-id-network

  db_dm_copy:
    container_name: db_dm_copy
    image: "mariadb:10.2"
    volumes:
     - $MYSQL_INIT_SCRIPT_DM:/docker-entrypoint-initdb.d/$MYSQL_INIT_SCRIPT_TARGET_FILE_NAME:ro
    ports:
     - "64002:3306"
    environment:
      MYSQL_DATABASE: dm
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
    networks:
     - db-network

  db_edgecreator:
    container_name: db_edgecreator
    image: "mariadb:10.2"
    volumes:
     - $MYSQL_INIT_SCRIPT_EDGECREATOR:/docker-entrypoint-initdb.d/$MYSQL_INIT_SCRIPT_TARGET_FILE_NAME:ro
    ports:
     - "64003:3306"
    environment:
      MYSQL_DATABASE: edgecreator
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
    networks:
     - db-network

  db_dm_stats:
    container_name: db_dm_stats
    image: "mariadb:10.2"
    volumes:
     - $MYSQL_INIT_SCRIPT_DM_STATS:/docker-entrypoint-initdb.d/$MYSQL_INIT_SCRIPT_TARGET_FILE_NAME:ro
    ports:
     - "64010:3306"
    environment:
      MYSQL_DATABASE: dm_stats
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
    networks:
     - db-network

  swagger:
    container_name: swagger
    image: "swaggerapi/swagger-ui"
    ports:
     - "8081:8080"
    depends_on:
     - web
     - php
    environment:
      API_URL: "http://$DM_SERVER_HOST:$DM_SERVER_PORT/status/swagger.json"
      SWAGGER_JSON: "http://$DM_SERVER_HOST:$DM_SERVER_PORT/status/swagger.json"
    networks:
     - front-network

networks:
  front-network:
    driver: bridge
  db-network:
    driver: bridge
  cover-id-network:
    driver: bridge
